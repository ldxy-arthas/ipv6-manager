version: '3.3'

services:

  collect-service:
    image: ${DOCKER_PREFIX}-service-collect
    build:
      dockerfile: ${COLLECT_DOCKERFILE}
      context: .
      args:
        APP_HOME: ${APP_HOME}
    container_name: ${DOCKER_PREFIX}-service-collect
    restart: always
    environment:
      - SERVER_PORT=${COLLECT_SERVICE_PORT}
      - MONGODB_URI=mongodb://admin:admin123@mongo:27017/admin
    volumes:
      - ${COLLECT_SERVICE}:${APP_HOME} # 将main映射进来
      - ./apps/collect/logs:/service/ipv6-manager/logs # 将应用的日志映射出来
      - /etc/localtime:/etc/localtime
    ports:
      - "3000:3000"
    networks:
      - manager

  manager-service:
    image: ${DOCKER_PREFIX}-service-manager
    build:
      dockerfile: ${MANAGER_DOCKERFILE}
      context: .
      args:
        APP_HOME: ${APP_HOME}
    container_name: ${DOCKER_PREFIX}-service-manager
    restart: always
    environment:
      - SERVER_PORT=${MANAGER_SERVICE_PORT}
      - MONGODB_URI=mongodb://admin:admin123@mongo:27017/admin
    volumes:
      - ${MANAGER_SERVICE}:${APP_HOME} # 将jar包映射进来
      - ./apps/manager/logs:/service/ipv6-manager/logs # 将springboot应用的日志映射出来
      - /etc/localtime:/etc/localtime
    ports:
      - "8080:8080"
    networks:
      - manager

  nginx:
    image: nginx:latest
    container_name: ${DOCKER_PREFIX}-nginx
    restart: always
    volumes:
      - ./nginx/conf/conf.d:/etc/nginx/conf.d # 里面的default.conf是nginx的配置
      - ./nginx/html:/usr/share/nginx/html # 前端的页面放在这里
      - ./nginx/logs:/var/log/nginx # 把log映射出来
      - ./files:/usr/share/nginx/files # 上传的所有静态文件都在这里
      - ./nginx/conf/conf.d/ssl:/etc/nginx/conf.d/ssl # ssl证书
    ports:
      - "443:443"
    networks:
      - manager

  redis:
    image: redis:latest
    container_name: ${DOCKER_PREFIX}-redis
    restart: always
    volumes:
      - ./redis/data:/data
      - ./redis/conf/redis.conf:/usr/local/etc/redis/redis.conf
      - ./redis/logs:/logs
    command: [ "redis-server", "/usr/local/etc/redis/redis.conf" ]
    ports:
      - "6379:6379"
    environment:
      - TZ="Asia/Shanghai"
    networks:
      - manager

  mongo:
    image: mongo:latest #根据需要选择自己的镜像
    restart: always
    container_name: ${DOCKER_PREFIX}-mongo
    ports:
      - 27017:27017 #对外暴露停供服务的端口，正式生产的时候理论不用暴露。
    volumes:
      - ./mongo/data:/data/db # 前面是外面映射的，后面是容器内的挂载数据目录
      - ./mongo/log:/data/log # 挂载日志目录
      - ./mongo/conf:/etc/mongo # 挂载配置目录
      - ./mongo/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh # 初始化脚本
    environment:
      TZ: Asia/Shanghai
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin123
      MONGO_INITDB_DATABASE: ipv6_manager
      MONGO_USERNAME: ipv6
      MONGO_PASSWORD: ipv6
    networks:
      - manager

  portainer:
    image: portainer/portainer:latest
    container_name: ${DOCKER_PREFIX}-portainer
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./portainer/data:/data
    environment:
      TZ: Asia/Shanghai
    ports:
      - "9000:9000"
    networks:
      - manager

networks:
  manager:
    external: true
